
# .NET

jobs:

# ------------------------------------------------------------------------------------------------------
# Request Linux Ubunto 16.04 VM 
# ------------------------------------------------------------------------------------------------------
- job: Linux
  pool:
    vmImage: 'Ubuntu 16.04'

# ------------------------------------------------------------------------------------------------------
# Job Variables
# ------------------------------------------------------------------------------------------------------
  variables:  
    solution: '**/*.sln'     # = D:\a\1\s\Ginger\Ginger.sln
    buildConfiguration: 'Release'
    solutionDirectory:  'Ginger-Automation/Ginger'
    testDLLs: |
      **\GingerCoreCommonTest\bin\$(buildConfiguration)\netcoreapp2.1\GingerCoreCommonTest.dll
      **\GingerCoreNETUnitTest\bin\$(buildConfiguration)\netcoreapp2.1\GingerCoreNETUnitTest.dll
      **\GingerConsoleTest\bin\$(buildConfiguration)\netcoreapp2.1\GingerConsoleTest.dll
      **\GingerAutoPilotTest\bin\$(buildConfiguration)\netcoreapp2.1\GingerAutoPilotTest.dll
      **\GingerPluginCoreTest\bin\$(buildConfiguration)\netcoreapp2.1\GingerPluginCoreTest.dll           
     
    artifactsFolder: 'D:\a\1\a' 
  
  steps:
  # - script: dotnet test  Ginger/Ginger.sln --configuration $(buildConfiguration) --logger trx
  #- task: PublishTestResults@2
  #  condition: succeededOrFailed()
  #  inputs:
  #    testRunner: VSTest
  #    testResultsFiles: '**/*.trx'

  #- task: PublishBuildArtifacts@1

  
# ------------------------------------------------------------------------------------------------------
# Install Nuget tool
# ------------------------------------------------------------------------------------------------------
  - task: NuGetToolInstaller@0  
    displayName: NuGet Tool Installer

# ------------------------------------------------------------------------------------------------------
# Restore Ginger solution NuGet packages
# ------------------------------------------------------------------------------------------------------
  - task: NuGetCommand@2
    inputs:
      command: restore  
      restoreSolution: '$(**\GingerCoreCommonTest\GingerCoreCommonTest.csproj **\GingerCoreNetTest\GingerCoreNetTest.csproj)'       
    displayName: Restore Ginger .net core projects Nuget Packages
  
# ------------------------------------------------------------------------------------------------------
# Build Ginger DLLs .Net Core only
# ------------------------------------------------------------------------------------------------------

  #- script: dotnet build '$(**\GingerCoreCommonTest\GingerCoreCommonTest.csproj)'
  #  displayName: Build Ginger DLLs

# ------------------------------------------------------------------------------------------------------
# Run Unit Test Level 1,2,3 for .NET Core testDLLs
# ------------------------------------------------------------------------------------------------------
    
    # TODO: run unit test by level 1,2,3 continue on sucess only

  #- task: VSTest@2
  #  displayName: 'Run Unit tests Level for .Net Core test DLLs'
  #  inputs:      
  #    testAssemblyVer2: $(testDLLs)
  #    runInParallel: True
  #    codeCoverageEnabled: True

  - task: DotNetCoreCLI@2
    displayName: 'Run Unit tests Level for .Net Core test DLLs'
    inputs:
      command: test
      projects: '**/GingerCoreCommonTest/GingerCoreCommonTest.csproj **/GingerCoreNetTest/GingerCoreNetTest.csproj'
      arguments: '--configuration $(buildConfiguration)'    #   --collect "Code coverage" not working on Linux !?

  
  #- task: PublishTestResults@2
  #  condition: succeededOrFailed()
  #  inputs:
  #    testRunner: VSTest
  #    testResultsFiles: '**/*.trx'


 # - task: PublishBuildArtifacts@1


 # failTaskOnFailedTests: true

