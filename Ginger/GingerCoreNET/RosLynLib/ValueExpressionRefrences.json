{
  "Refrences": [
    {
      "Category": "String Functions",
      "Name": "Trim whitespace",
      "Expression": "{CS Exp=\"hel lo\".Replace(\" \",\"\")}",
      "UseCase": null,
      "Sample": "{CS Exp=\"hel lo\".Replace(\" \",\"\")} will change hel lo to hello",
      "ReturnType": "String",
      "ExpressionResult": "hello",
      "IconImageName": "@A_16x16.png"
    },
    {
      "Category": "String Functions",
      "Name": "Trim whitespace & line breaks",
      "Expression": "Trim(Replace(\"{Actual}\",\"vbCrLf\",\"\"))",
      "UseCase": null,
      "Sample": null,
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": "@A_16x16.png"
    },
    {
      "Category": "Condition Evaluation",
      "Name": "Current Windows username",
      "Expression": "{CS Exp=System.Environment.UserName}",
      "UseCase": "Get Current User Name",
      "Sample": "{CS Exp=System.Environment.UserName} will give you user name",
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": null
    },
    {
      "Category": "Date Time Functions",
      "Name": "Get Current Time",
      "Expression": "{CS Exp=DateTime.Now}",
      "UseCase": "You'll get current date time",
      "Sample": null,
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": "@Clock_16x16.png"
    },
    {
      "Category": "Date Time Functions",
      "Name": "Tomorrow",
      "Expression": "{CS Exp=DateTime.Now+new TimeSpan(24,0,0)}",
      "UseCase": "Get Same time for tomorrow  ",
      "Sample": null,
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": "@Clock_16x16.png"
    },
    {
      "Category": "Date Time Functions",
      "Name": "Current Time Hour",
      "Expression": "{CS Exp=DateTime.Now.Hour}",
      "UseCase": "Get Hour value in current time in 24h format",
      "Sample": null,
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": "@Clock_16x16.png"
    },
    {
      "Category": "Date Time Functions",
      "Name": "Current Time Minutes",
      "Expression": "{CS Exp=DateTime.Now.Minute}",
      "UseCase": "Get Minute Value of current time",
      "Sample": null,
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": "@Clock_16x16.png"
    },
    {
      "Category": "Date Time Functions",
      "Name": "Current Time Seconds",
      "Expression": "{CS Exp=DateTime.Now.Second}",
      "UseCase": "Get Minute Value of current time",
      "Sample": null,
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": "@Clock_16x16.png"
    },
    {
      "Category": "Date Time Functions",
      "Name": "Current Time Hour (0# format)",
      "Expression": "Right(\"0\" & Int(Timer/3600),2)",
      "UseCase": null,
      "Sample": null,
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": "@Clock_16x16.png"
    },
    {
      "Category": "Date Time Functions",
      "Name": "Current Time Minute (0# format)",
      "Expression": "Right(\"0\" &  Int((Timer-(Int(Timer/3600)*3600))/60),2)",
      "UseCase": null,
      "Sample": null,
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": "@Clock_16x16.png"
    },
    {
      "Category": "Date Time Functions",
      "Name": "Current Time Seconds (0# format)",
      "Expression": "Right(\"0\" & Int(Timer-(Int(Timer/60)*60)),2)",
      "UseCase": null,
      "Sample": null,
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": "@Clock_16x16.png"
    },
    {
      "Category": "Date Time Functions",
      "Name": "Current Month (0# format)",
      "Expression": "{CS Exp=DateTime.Now.ToString(\"MM\")}",
      "UseCase": "Get Current Month ",
      "Sample": "{CS Exp=DateTime.Now.ToString(\"MM\")} If today's date is 1st Feb it will give 02",
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": "@Clock_16x16.png"
    },
    {
      "Category": "Date Time Functions",
      "Name": "Current Day (0# format)",
      "Expression": "{CS Exp=DateTime.Now.ToString(\"dd\")}",
      "UseCase": "Get Current Day",
      "Sample": "If today's date is 1st Feb it will give 01",
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": "@Clock_16x16.png"
    },
    {
      "Category": "Date Time Functions",
      "Name": "Current Year (#### format)",
      "Expression": "{CS Exp=DateTime.Now.Year}",
      "UseCase": "Get Current Year ",
      "Sample": "{CS Exp=DateTime.Now.Year} If today's date is 1st Feb 2019 it will give 2019",
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": "@Clock_16x16.png"
    },
    {
      "Category": "Date Time Functions",
      "Name": "Current Year (## format)",
      "Expression": "{CS Exp=DateTime.Now.ToString(\"yy\")}",
      "UseCase": "Get Current Year ",
      "Sample": "{CS Exp=DateTime.Now.ToString(\"yy\")} If today's date is 1st Feb 2019 it will give 19",
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": "@Clock_16x16.png"
    },
    {
      "Category": "Date Time Functions",
      "Name": "Current Month Date +3 Days",
      "Expression": "{CS Exp=DateTime.Today.AddDays(3)}",
      "UseCase": "Get Date after three days",
      "Sample": null,
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": "@Clock_16x16.png"
    },
    {
      "Category": "Date Time Functions",
      "Name": "Current Date -1 month",
      "Expression": "{CS Exp=DateTime.Today.AddMonths(-1)}",
      "UseCase": "Get same date in previous month",
      "Sample": "if Today is 2nd Feb 2019 ",
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": "@Clock_16x16.png"
    },
    {
      "Category": "Date Time Functions",
      "Name": "Current Month -1 (MM format)",
      "Expression": "{CS Exp=DateTime.Today.AddMonths(-1).ToString(\"MM/dd/yyyy\")}",
      "UseCase": "get previous month in MM format ",
      "Sample": "if Today is 2nd Feb 2019 the expression will result in 01",
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": "@Clock_16x16.png"
    },
    {
      "Category": "Date Time Functions",
      "Name": "Current Day of Week (Name)",
      "Expression": "{CS Exp=DateTime.Now.DayOfWeek}",
      "UseCase": "Get Current day of week",
      "Sample": "It will return day for today e.g. Friday, Saturday ETC",
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": "@Clock_16x16.png"
    },
    {
      "Category": "Date Time Functions",
      "Name": "Get # of days between 2 dates",
      "Expression": "DateDiff(\"d\",\"5-16-2016\",\"6-16-2016\")",
      "UseCase": null,
      "Sample": null,
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": "@Clock_16x16.png"
    },
    {
      "Category": "Date Time Functions",
      "Name": "Check if date is valid",
      "Expression": "CStr(IsDate(\"5/18/2016\"))",
      "UseCase": null,
      "Sample": null,
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": "@Clock_16x16.png"
    },

    {
      "Category": "General Operations",
      "Name": "Choose a val from list",
      "Expression": "{CS Exp=new object[] {5,6,7,8}[0]}",
      "UseCase": "Gets ",
      "Sample": null,
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": null
    },
    {
      "Category": "General Operations",
      "Name": "Concatenate list w delimiter",
      "Expression": "{CS Exp=String.Join(\"|\", new string[] { \"A\", \"B\", \"C\", \"D\" })}",
      "UseCase": "Joins an array of elements with provided delimiter",
      "Sample": "{CS Exp=String.Join(\"|\", new string[] { \"A\", \"B\", \"C\", \"D\" })} will results in A|B|C|D",
      "ReturnType": null,
      "ExpressionResult": "A|B|C|D",
      "IconImageName": "@Clock_16x16.png"
    },
    {
      "Category": "Date Time Functions",
      "Name": "Get Inner String Index",
      "Expression": "{CS Exp=\"Hello World\".IndexOf(\"World\")}",
      "UseCase": "Provides Index(base 0) of Provided keyword in string",
      "Sample": "{CS Exp=\"Hello World\".IndexOf(\"World\")} will return 6",
      "ReturnType": null,
      "ExpressionResult": "6",
      "IconImageName": "@Clock_16x16.png"
    },
    {
      "Category": "Regular Expressions",
      "Name": "Extract Initial Digits",
      "Expression": "1 Pat=([\\d\\D]{2}).*$ P1=12345",
      "UseCase": null,
      "Sample": null,
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": "@Regex16x16.png"
    },
    {
      "Category": "Regular Expressions",
      "Name": "Extract Last Digits",
      "Expression": "1 Pat=.+([\\d\\D]{2})$ P1=12345",
      "UseCase": null,
      "Sample": null,
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": "@Regex16x16.png"
    },
    {
      "Category": "Regular Expressions",
      "Name": "Extract Number From Text",
      "Expression": "matchValue Pat=\\d+ P1= aaa 123 bbb",
      "UseCase": null,
      "Sample": null,
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": "@Regex16x16.png"
    },
    {
      "Category": "Regular Expressions",
      "Name": "Remove Characters From Numbers",
      "Expression": "Replace Pat=\\D+ P1=(404) 200-0352",
      "UseCase": null,
      "Sample": null,
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": "@Regex16x16.png"
    },
    {
      "Category": "Date Time Functions",
      "Name": "Actual > 0",
      "Expression": "{Actual} > 0",
      "UseCase": null,
      "Sample": null,
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": null
    },
    {
      "Category": "Date Time Functions",
      "Name": "Actual Contains String 'ABC'",
      "Expression": "InStr({Actual},\"ABC\")>0",
      "UseCase": null,
      "Sample": null,
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": null
    },
    {
      "Category": "Date Time Functions",
      "Name": "Actual start with 'ABC'",
      "Expression": "Left({Actual},3)=\"ABC\"",
      "UseCase": null,
      "Sample": null,
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": null
    },
    {
      "Category": "Date Time Functions",
      "Name": "Actual String Length is 5 chars",
      "Expression": "Len({Actual})=5",
      "UseCase": null,
      "Sample": null,
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": "@A_16x16.png"
    },
    {
      "Category": "Date Time Functions",
      "Name": "Actual SubString from char in position 2 length 3 is 'ABC'",
      "Expression": "Mid({Actual},2,3)=\"ABC\"",
      "UseCase": null,
      "Sample": null,
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": null
    },
    {
      "Category": "String Functions",
      "Name": "Actual to Upper Case = 'ABC'",
      "Expression": "{CS Exp=\"\"abc\".ToUpper()\"}",
      "UseCase": "Returns the string in Upper Case",
      "Sample": null,
      "ReturnType": null,
      "ExpressionResult": null,
      "IconImageName": "@A_16x16.png"

    },
    {
      "Category": "String Functions",
      "Name": "Replace Text",
      "Expression": "{CS Exp=\"\"abc\".Replace(\"b\",\"d\")\"}",
      "UseCase": "Replcaes Text in String",
      "Sample": "{CS Exp=\"\"abc\".Replace(\"b\",\"d\")\"} will  change abc to adc",
      "IconImageName": "@A_16x16.png"
    },
    {
      "Category": "String Functions",
      "Name": "Text Contains",
      "Expression": "{CS Exp=\"\"abc\".Contains(\"b\")\"}",
      "UseCase": "Check if provided text is present in string",
      "Sample": "{CS Exp=\"\"abc\".Contains(\"b\")\"} will return true if b is present in abc",
      "IconImageName": "@A_16x16.png"
    },
    {
      "Category": "Math",
      "Name": "Add",
      "Expression": "{CS Exp=\"5+3\"}",
      "UseCase": "Perfrom Mathematical operations",
      "Sample": "{CS Exp=\"5+3\"} will return 8 for 5+3. It will return 2.5 for 5/2.0 but will return 2 for 5/2 "
    },
    {
      "Category": "String Functions",
      "Name": "Starts With",
      "Expression": "{CS Exp=\"\"Abc\".StartsWith(\"A\")\"}",
      "UseCase": "Check if provided string Starts with provided characters",
      "Sample": "{CS Exp=\"\"Abc\".StartsWith(\"A\")\"} will return true as Abc Starts with A",
      "IconImageName": "@A_16x16.png"
    },
    {
      "Category": "String Functions",
      "Name": "Ends With",
      "Expression": "{CS Exp=\"\"Abc\".EndsWith(\"c\")\"}",
      "UseCase": "Check if provided string Ends with provided characters",
      "Sample": "{CS Exp=\"\"Abc\".EndsWith(\"c\")\"} will return true as Abc Ends with B",
      "IconImageName": "@A_16x16.png"
    },
    {
      "Category": "String Functions",
      "Name": "Get String Length",
      "Expression": "{CS Exp=\"\"Abc\".Length\"}",
      "UseCase": "Calculates length of string",
      "Sample": "{CS Exp=\"\"Abc\".Length\"} will return 3 as length of string",
      "IconImageName": "@A_16x16.png"
    },
    {
      "Category": "String Functions",
      "Name": "Get Substring",
      "Expression": "{CS Exp=\"\"Abcdefgh\".Substring(1,3)\"}",
      "UseCase": "Get sub strings from provided starting index(base 0) of specified ",
      "Sample": "{CS Exp=\"\"Abcdefgh\".Substring(1,3)\"}  will return bcd from starting index 1(base 0) of length r ",
      "IconImageName": "@A_16x16.png"
    }
  ]
}

