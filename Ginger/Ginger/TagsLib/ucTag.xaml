    <UserControl x:Name="over" x:Class="Ginger.ucTag"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Ginger.TagsLib"
             mc:Ignorable="d">
    <StackPanel x:Name="tagStack" Orientation="Horizontal" Margin="5,0,5,0" HorizontalAlignment="Left" Height="24" MouseLeave="tagStack_MouseLeave" MouseEnter="tagStack_MouseEnter">
        <Label x:Name="lblTagName" Background="Transparent" Style="{StaticResource @SmallerInputFieldLabelStyle}"></Label>
        <!--<Button x:Name="btnClose" VerticalAlignment="Center" Width="8" Height="8" HorizontalAlignment="Left" Click="DeleteTag_Click" Background="Transparent" BorderThickness="0" MouseEnter="btnClose_MouseEnter" MouseLeave="btnClose_MouseLeave">
           
            <Image x:Name="closeImage" Source="{StaticResource @TagClose_16X16.png}" ></Image>
        </Button>-->
        <Button x:Name="xDeleteTagBtn" BorderBrush="Transparent" VerticalAlignment="Center" HorizontalAlignment="Left" Width="8" Height="8"  BorderThickness="0">
            <Button.Content>
                <Border>
                    <Image x:Name="closeImage" Margin="1" Source="{StaticResource @TagClose_16X16.png}" />
                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#f9D5AE" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
            </Button.Content>
            <Button.Style>
                <Style TargetType="{x:Type Button}" >
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}" >
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>

    </StackPanel>
</UserControl>
