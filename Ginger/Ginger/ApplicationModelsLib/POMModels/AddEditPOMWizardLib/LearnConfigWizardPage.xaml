    <Page x:Class="Ginger.ApplicationModelsLib.POMModels.AddEditPOMWizardLib.LearnConfigWizardPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:Ginger="clr-namespace:Ginger"
      xmlns:usercontrols="clr-namespace:Amdocs.Ginger.UserControls"
      xmlns:GingerCore="clr-namespace:GingerCore;assembly=GingerCore"
      xmlns:agents="clr-namespace:Ginger.Agents"
      mc:Ignorable="d" 
      d:DesignHeight="300" d:DesignWidth="600"
      Title="Learn Config">

    <StackPanel Background="{StaticResource $BackgroundGray}">
        <agents:ucAgentControl x:Name="xAgentControlUC"></agents:ucAgentControl>
        <!--<Grid Name="MainGrid" Background="{StaticResource $BackgroundGray}">

            <Grid.Resources>
                <DataTemplate x:Key="IsSelectedTemplate">
                    <CheckBox x:Name="IsSelected_FieldSelection" Checked="IsSelected_FieldSelection_Click" Unchecked="IsSelected_FieldSelection_Click" Style="{StaticResource @GridCellCheckBoxStyle}" IsEnabled="{Binding IsNotMandatory, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsChecked="{Binding IsSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" HorizontalAlignment="Center"/>
                </DataTemplate>
            </Grid.Resources>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="70"/>
                <ColumnDefinition Width="200*"/>
            <ColumnDefinition Width="50*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="292*"/>
        </Grid.RowDefinitions>

            <Label Content="Agent:" Grid.Row="0" HorizontalAlignment="Left"  Style="{StaticResource @LabelStyle}" />
            <ComboBox x:Name="xAgentComboBox" Grid.Row="0" Grid.Column="1" FontWeight="Bold" VerticalAlignment="Center" SelectionChanged="AgentComboBox_SelectionChanged" Style="{StaticResource $FlatInputComboBoxStyle}"/>

            <Button x:Name="xStartAgentButton" Grid.Row="0" Grid.Column="2" Click="StartAgentButton_Click" ToolTip="Agent is OFF, Click to Start It">
                <Image Source="{StaticResource @ToggleOFF_16x16}"></Image>
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}" />
                        <Setter Property="FontFamily" Value="Open Sans" />
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="Transparent" BorderThickness="1">
                                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}" 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Foreground" Value="White" />
                                            <Setter Property="Background" Value="{DynamicResource @Skin1_ColorB2}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=mAgent}" Value="{x:Null}">
                                <Setter Property="Button.Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=mAgent.Status}" Value="NotStarted">
                                <Setter Property="Button.Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=mAgent.Status}" Value="FailedToStart">
                                <Setter Property="Button.Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=mAgent.Status}" Value="Starting">
                                <Setter Property="Button.Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=mAgent.Status}" Value="Ready">
                                <Setter Property="Button.Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=mAgent.Status}" Value="Running">
                                <Setter Property="Button.Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=mAgent.Status}" Value="Completed">
                                <Setter Property="Button.Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="LoadingAgentButton" Grid.Row="0" Grid.Column="2" ToolTip="Agent is Loading..." Click="LoadingAgentButton_Click">
                <Image Source="{StaticResource @ToggleMiddle_16x16}" ></Image>
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}" />
                        <Setter Property="FontFamily" Value="Open Sans" />

                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="Transparent" BorderThickness="1">
                                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}" 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Foreground" Value="White" />
                                            <Setter Property="Background" Value="{DynamicResource @Skin1_ColorB2}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=mAgent}" Value="{x:Null}">
                                <Setter Property="Button.Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=mAgent.Status}" Value="NotStarted">
                                <Setter Property="Button.Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=mAgent.Status}" Value="FailedToStart">
                                <Setter Property="Button.Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=mAgent.Status}" Value="Starting">
                                <Setter Property="Button.Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=mAgent.Status}" Value="Ready">
                                <Setter Property="Button.Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=mAgent.Status}" Value="Running">
                                <Setter Property="Button.Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=mAgent.Status}" Value="Completed">
                                <Setter Property="Button.Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="CloseAgentButton" Grid.Row="0" Grid.Column="2" Click="CloseAgentButton_Click" ToolTip="Agent in ON, Click to Stop It">
                <Image Source="{StaticResource @ToggleON_16x16}" ></Image>
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}" />
                        <Setter Property="FontFamily" Value="Open Sans" />
                        --><!--<Setter Property="Height" Value="25" />--><!--
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="Transparent" BorderThickness="1">
                                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}" 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Foreground" Value="White" />
                                            <Setter Property="Background" Value="{DynamicResource @Skin1_ColorB2}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=mAgent}" Value="{x:Null}">
                                <Setter Property="Button.Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=mAgent.Status}" Value="NotStarted">
                                <Setter Property="Button.Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=mAgent.Status}" Value="FailedToStart">
                                <Setter Property="Button.Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=mAgent.Status}" Value="Starting">
                                <Setter Property="Button.Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=mAgent.Status}" Value="Ready">
                                <Setter Property="Button.Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=mAgent.Status}" Value="Running">
                                <Setter Property="Button.Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=mAgent.Status}" Value="Completed">
                                <Setter Property="Button.Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Label Grid.Column="0" Grid.Row="1" Content="Page:"  Style="{StaticResource @LabelStyle}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <ComboBox Grid.Column="1"  Grid.Row="1" x:Name="xAgentPageComboBox" SelectionChanged="WindowsComboBox_SelectionChanged"  FontWeight="Bold" Style="{StaticResource $FlatInputComboBoxStyle}" />
            <Button Grid.Column="2" Grid.Row="1" x:Name="xRefreshPagesButton" Click="RefreshPagesButton_Click" usercontrols:ImageMaker.Content="Refresh" Width="18" ToolTip="Refresh Windows List" Style="{StaticResource @InputImageButtonStyle_NoBorder}"></Button>


        </Grid>-->


        <Expander x:Name="PropertiesExpander" Margin="15,10,0,0" Visibility="Visible" IsExpanded="False" >
            <Expander.Header>
                <Label x:Name="PropertiesExpanderLabel" Style="{StaticResource @HorizontalExpanderLightLabelStyle}">
                    <Label.Content>
                        <GingerCore:ucTextDicResource Text="Elements Learning Filter"/>
                    </Label.Content>
                </Label>
            </Expander.Header>
            <Expander.Content>
                <StackPanel Orientation="Vertical" Margin="10,0,25,0" >
                    
                    <Ginger:ucGrid x:Name="xFilterElementsGridView" Title="Filter Elements"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ShowAdd="Collapsed" ShowClearAll="Collapsed" ShowUpDown="Collapsed" ShowRefresh="Collapsed" ShowEdit="Collapsed"  ShowDelete="Collapsed"  />
                    
                </StackPanel>
            </Expander.Content>
        </Expander>

       
    </StackPanel>
</Page>
